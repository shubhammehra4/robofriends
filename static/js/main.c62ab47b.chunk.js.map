{"version":3,"sources":["Components/SearchBox.js","Components/Card.js","Components/CardList.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["SearchBox","searchChange","className","type","placeholder","onChange","Card","id","name","email","src","alt","CardList","list","robots","map","robot","Scroll","props","style","overflowY","height","children","ErrorBoundary","state","hasError","error","info","console","log","this","setState","Component","App","useState","setRobots","searchfield","setSearchfield","useEffect","fetch","then","res","json","users","catch","length","filteredRobots","filter","toLowerCase","includes","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAeeA,MAbf,YAAsC,IAAjBC,EAAgB,EAAhBA,aACjB,OACI,qBAAKC,UAAU,UAAf,SACI,uBACIA,UAAU,mCACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCSXK,MAhBf,YAAoC,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACtB,OACI,sBAAKP,UAAU,sDAAf,UACI,qBACIA,UAAU,aACVQ,IAAG,+BAA0BH,EAA1B,YACHI,IAAI,WAER,sBAAKT,UAAU,eAAf,UACI,6BAAKM,IACL,4BAAIC,WCILG,MAbf,YAA+B,IACrBC,EADoB,EAAVC,OACIC,KAAI,SAACC,GAAD,OACpB,cAAC,EAAD,CAEIT,GAAIS,EAAMT,GACVC,KAAMQ,EAAMR,KACZC,MAAOO,EAAMP,OAHRO,EAAMT,OAOnB,OAAO,qBAAKL,UAAU,MAAf,SAAsBW,KCHlBI,MARf,SAAgBC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,SAA3C,SACKH,EAAMI,Y,4BCmBJC,E,kDArBX,WAAYL,GAAQ,IAAD,8BACf,cAAMA,IAEDM,MAAQ,CACRC,UAAU,GAJA,E,8DAQDC,EAAOC,GACrBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CAACN,UAAU,M,+BAIzB,OAAGK,KAAKN,MAAMC,SACH,+CAEJK,KAAKZ,MAAMI,a,GAlBEU,aC2CbC,MAvCf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACJpB,EADI,KACIqB,EADJ,OAE2BD,mBAAS,IAFpC,mBAEJE,EAFI,KAESC,EAFT,KAeX,GAXAC,qBAAU,WACNC,MAAM,8CACDC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAWR,EAAUQ,MAC1BC,OAAM,SAAClB,GAAD,OAAWE,QAAQC,IAAIH,QACnC,KAMEZ,EAAO+B,OACR,OACI,qBAAK3C,UAAU,KAAf,SACI,oBAAIA,UAAU,yBAAd,0BAIZ,IAAM4C,EAAiBhC,EAAOiC,QAAO,SAAC/B,GAAD,OACjCA,EAAMR,KAAKwC,cAAcC,SAASb,EAAYY,kBAElD,OACI,sBAAK9C,UAAU,KAAf,UACI,oBAAIA,UAAU,iCAAd,0BACA,cAAC,EAAD,CAAWD,aAjBI,SAACiD,GACpBb,EAAea,EAAMC,OAAOC,UAiBxB,uBACA,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUtC,OAAQgC,YC1BvBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c62ab47b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchBox({ searchChange }) {\r\n    return (\r\n        <div className=\"pa2 ma4\">\r\n            <input\r\n                className=\"pa3 ba b--green bg-lightest-blue\"\r\n                type=\"search\"\r\n                placeholder=\"Search Robots\"\r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nfunction Card({ id, name, email }) {\r\n    return (\r\n        <div className=\"tc bg-light-green dib pa3 ma4 grow br3 bw2 shadow-5\">\r\n            <img\r\n                className=\"card-image\"\r\n                src={`https://robohash.org/${id}?200x200`}\r\n                alt=\"Robots\"\r\n            />\r\n            <div className=\"card-content\">\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardList({ robots }) {\r\n    const list = robots.map((robot) => (\r\n        <Card\r\n            key={robot.id}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email={robot.email}\r\n        />\r\n    ));\r\n\r\n    return <div className=\"pa1\">{list}</div>;\r\n}\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        <div style={{ overflowY: \"scroll\", height: \"750px\" }}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;\r\n","import React, { Component } from 'react'\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             hasError: false\r\n        }\r\n    }\r\n    \r\n    componentDidCatch(error, info) {\r\n        console.log(error, info);\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1>Oops Not Good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect } from \"react\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport CardList from \"../Components/CardList\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundary from \"../Components/ErrorBoundary\";\r\n\r\nfunction App() {\r\n    const [robots, setRobots] = useState([]);\r\n    const [searchfield, setSearchfield] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then((res) => res.json())\r\n            .then((users) => setRobots(users))\r\n            .catch((error) => console.log(error));\r\n    }, []);\r\n\r\n    const onSearchChange = (event) => {\r\n        setSearchfield(event.target.value);\r\n    };\r\n\r\n    if (!robots.length)\r\n        return (\r\n            <div className=\"tc\">\r\n                <h1 className=\"courier red f1 ma2 mt4\">Loading...</h1>\r\n            </div>\r\n        );\r\n\r\n    const filteredRobots = robots.filter((robot) =>\r\n        robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    );\r\n    return (\r\n        <div className=\"tc\">\r\n            <h1 className=\"f1 light-green ttu sans-serif \">Robo Friends</h1>\r\n            <SearchBox searchChange={onSearchChange} />\r\n            <hr />\r\n            <ErrorBoundary>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </ErrorBoundary>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}